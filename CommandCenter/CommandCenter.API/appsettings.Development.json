{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Verbose",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.AspNetCore": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}] [{Level:u3}] CorrelationId:{CorrelationId} | {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l= 'Fatal'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "Logs\\Fatal\\log-.txt",
                  "fileSizeLimitBytes": 1073741824, // 1GB by default
                  "rollOnFileSizeLimit": false,
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": null, // store last 31 days by default
                  "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}] [{Level:u3}] ThreadId:{ThreadId} | CorrelationId:{CorrelationId} | {Message:lj}{NewLine}{Exception}{NewLine}",
                  "shared": true
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l= 'Error'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": ".\\Logs\\Error\\log-.txt",
                  "fileSizeLimitBytes": 1073741824, // 1GB by default
                  "rollOnFileSizeLimit": false,
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": null, // store last 31 days by default
                  "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}] [{Level:u3}] ThreadId:{ThreadId} | CorrelationId:{CorrelationId} | {Message:lj}{NewLine}{Exception}{NewLine}",
                  "shared": true
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l= 'Warning'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": ".\\Logs\\Warning\\log-.txt",
                  "fileSizeLimitBytes": 1073741824, // 1GB by default
                  "rollOnFileSizeLimit": false,
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": null, // store last 31 days by default
                  "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}] [{Level:u3}] ThreadId:{ThreadId} | CorrelationId:{CorrelationId} | {Message:lj}{NewLine}{NewLine}",
                  "shared": true
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l= 'Information'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": ".\\Logs\\Information\\log-.txt",
                  "fileSizeLimitBytes": 1073741824, // 1GB by default
                  "rollOnFileSizeLimit": false,
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": null, // store last 31 days by default
                  "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}] [{Level:u3}] ThreadId:{ThreadId} | CorrelationId:{CorrelationId} | {Message:lj}{NewLine}",
                  "shared": true
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l= 'Debug'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": ".\\Logs\\Debug\\log-.txt",
                  "fileSizeLimitBytes": 1073741824, // 1GB by default
                  "rollOnFileSizeLimit": false,
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": null, // store last 31 days by default
                  "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}] [{Level:u3}] ThreadId:{ThreadId} | CorrelationId:{CorrelationId} | {Message:lj}{NewLine}",
                  "shared": true
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l= 'Verbose'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": ".\\Logs\\Verbose\\log-.txt",
                  "fileSizeLimitBytes": 1073741824, // 1GB by default
                  "rollOnFileSizeLimit": false,
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": null, // store last 31 days by default
                  "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}] [{Level:u3}] CorrelationId:{CorrelationId} | {Message:lj}{NewLine}",
                  "shared": true
                }
              }
            ]
          }
        }
      }
    ],
    "Enrich": [
      "FromLogContext",
      "WithThreadId"
    ],
    "Properties": {
      "ApplicationName": "CommandCenter API"
    }
  }
}